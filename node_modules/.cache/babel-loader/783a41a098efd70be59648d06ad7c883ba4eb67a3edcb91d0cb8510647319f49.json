{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\preet\\\\OneDrive\\\\Desktop\\\\expense-tr\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport ExpenseForm from './components/ExpenseForm';\nimport ExpenseList from './components/ExpenseList';\nimport SummaryChart from './components/SummaryChart';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  useEffect(() => {\n    const savedExpenses = localStorage.getItem('expenses');\n    if (savedExpenses) {\n      try {\n        const parsedExpenses = JSON.parse(savedExpenses);\n        if (Array.isArray(parsedExpenses)) {\n          setExpenses(parsedExpenses);\n        }\n      } catch (error) {\n        console.error('Failed to parse expenses from localStorage', error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('expenses', JSON.stringify(expenses));\n  }, [expenses]);\n  const addExpense = newExpense => {\n    setExpenses(prevExpenses => [...prevExpenses, newExpense]);\n  };\n  const deleteExpense = id => {\n    setExpenses(prevExpenses => prevExpenses.filter(expense => expense.id !== id));\n  };\n  const clearAllExpenses = () => {\n    if (window.confirm('Are you sure you want to delete ALL expenses?')) {\n      setExpenses([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(ExpenseForm, {\n          onAddExpense: addExpense\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n          expenses: expenses,\n          onDelete: deleteExpense,\n          onClearAll: clearAllExpenses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: /*#__PURE__*/_jsxDEV(SummaryChart, {\n          expenses: expenses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"i498EKZIKWCcv5O/wfQn16k7d88=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ExpenseForm","ExpenseList","SummaryChart","jsxDEV","_jsxDEV","App","_s","expenses","setExpenses","savedExpenses","localStorage","getItem","parsedExpenses","JSON","parse","Array","isArray","error","console","setItem","stringify","addExpense","newExpense","prevExpenses","deleteExpense","id","filter","expense","clearAllExpenses","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddExpense","onDelete","onClearAll","_c","$RefreshReg$"],"sources":["C:/Users/preet/OneDrive/Desktop/expense-tr/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport ExpenseForm from './components/ExpenseForm';\r\nimport ExpenseList from './components/ExpenseList';\r\nimport SummaryChart from './components/SummaryChart';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    const [expenses, setExpenses] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const savedExpenses = localStorage.getItem('expenses');\r\n        if (savedExpenses) {\r\n            try {\r\n                const parsedExpenses = JSON.parse(savedExpenses);\r\n                if (Array.isArray(parsedExpenses)) {\r\n                    setExpenses(parsedExpenses);\r\n                }\r\n            } catch (error) {\r\n                console.error('Failed to parse expenses from localStorage', error);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('expenses', JSON.stringify(expenses));\r\n    }, [expenses]);\r\n\r\n    const addExpense = (newExpense) => {\r\n        setExpenses(prevExpenses => [...prevExpenses, newExpense]);\r\n    };\r\n\r\n    const deleteExpense = (id) => {\r\n        setExpenses(prevExpenses => prevExpenses.filter(expense => expense.id !== id));\r\n    };\r\n\r\n    const clearAllExpenses = () => {\r\n        if (window.confirm('Are you sure you want to delete ALL expenses?')) {\r\n            setExpenses([]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1>Expense Tracker</h1>\r\n            <div className=\"container\">\r\n                <div className=\"left-panel\">\r\n                    <ExpenseForm onAddExpense={addExpense} />\r\n                    <ExpenseList\r\n                        expenses={expenses}\r\n                        onDelete={deleteExpense}\r\n                        onClearAll={clearAllExpenses}\r\n                    />\r\n                </div>\r\n                <div className=\"right-panel\">\r\n                    <SummaryChart expenses={expenses} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMU,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,IAAIF,aAAa,EAAE;MACf,IAAI;QACA,MAAMG,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC;QAChD,IAAIM,KAAK,CAACC,OAAO,CAACJ,cAAc,CAAC,EAAE;UAC/BJ,WAAW,CAACI,cAAc,CAAC;QAC/B;MACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACtE;IACJ;EACJ,CAAC,EAAE,EAAE,CAAC;EAENlB,SAAS,CAAC,MAAM;IACZW,YAAY,CAACS,OAAO,CAAC,UAAU,EAAEN,IAAI,CAACO,SAAS,CAACb,QAAQ,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMc,UAAU,GAAIC,UAAU,IAAK;IAC/Bd,WAAW,CAACe,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAED,UAAU,CAAC,CAAC;EAC9D,CAAC;EAED,MAAME,aAAa,GAAIC,EAAE,IAAK;IAC1BjB,WAAW,CAACe,YAAY,IAAIA,YAAY,CAACG,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACF,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClF,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIC,MAAM,CAACC,OAAO,CAAC,+CAA+C,CAAC,EAAE;MACjEtB,WAAW,CAAC,EAAE,CAAC;IACnB;EACJ,CAAC;EAED,oBACIJ,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChB5B,OAAA;MAAA4B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBhC,OAAA;MAAK2B,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtB5B,OAAA;QAAK2B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvB5B,OAAA,CAACJ,WAAW;UAACqC,YAAY,EAAEhB;QAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzChC,OAAA,CAACH,WAAW;UACRM,QAAQ,EAAEA,QAAS;UACnB+B,QAAQ,EAAEd,aAAc;UACxBe,UAAU,EAAEX;QAAiB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNhC,OAAA;QAAK2B,SAAS,EAAC,aAAa;QAAAC,QAAA,eACxB5B,OAAA,CAACF,YAAY;UAACK,QAAQ,EAAEA;QAAS;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC9B,EAAA,CArDQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAuDZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}